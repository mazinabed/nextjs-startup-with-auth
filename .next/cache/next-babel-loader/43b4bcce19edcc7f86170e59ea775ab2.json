{"ast":null,"code":"const db = require(\"../models\");\n\nconst user = db.user;\nconst Op = db.Sequelize.Op; // Create and Save a new fitness log\n\nexports.create = (req, res) => {\n  // Validate request\n  if (!req.body) {\n    res.status(400).send({\n      message: \"Content can not be empty\"\n    });\n    return;\n  } // Find a single fitness log with an id\n\n\n  exports.findOne = (req, res) => {\n    const id = req.query.id;\n    console.log(\"id is : \" + id);\n    user.findOne(id).then(data => {\n      res.send(data);\n    }).catch(err => {\n      res.status(500).send({\n        message: \"Error retrieving Fitness with id=\" + id\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mazinabed/Desktop/nextjs-startup-with-auth/controllers/controller.js"],"names":["db","require","user","Op","Sequelize","exports","create","req","res","body","status","send","message","findOne","id","query","console","log","then","data","catch","err"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,WAAD,CAAlB;;AAEA,MAAMC,IAAI,GAAGF,EAAE,CAACE,IAAhB;AACA,MAAMC,EAAE,GAAGH,EAAE,CAACI,SAAH,CAAaD,EAAxB,C,CAEA;;AACAE,OAAO,CAACC,MAAR,GAAiB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7B;AACA,MAAI,CAACD,GAAG,CAACE,IAAT,EAAe;AACbD,IAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AADU,KAArB;AAGA;AACD,GAP4B,CAS/B;;;AACAP,EAAAA,OAAO,CAACQ,OAAR,GAAkB,CAACN,GAAD,EAAMC,GAAN,KAAc;AAC9B,UAAMM,EAAE,GAAGP,GAAG,CAACQ,KAAJ,CAAUD,EAArB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaH,EAAzB;AACAZ,IAAAA,IAAI,CAACW,OAAL,CAAaC,EAAb,EACGI,IADH,CACQC,IAAI,IAAI;AACZX,MAAAA,GAAG,CAACG,IAAJ,CAASQ,IAAT;AACD,KAHH,EAIGC,KAJH,CAISC,GAAG,IAAI;AACZb,MAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE,sCAAsCE;AAD5B,OAArB;AAGD,KARH;AASD,GAZD;AAgBC,CA1BD","sourcesContent":["const db = require(\"../models\");\n\nconst user = db.user;\nconst Op = db.Sequelize.Op;\n\n// Create and Save a new fitness log\nexports.create = (req, res) => {\n  // Validate request\n  if (!req.body) {\n    res.status(400).send({\n      message: \"Content can not be empty\"\n    });\n    return;\n  }\n\n// Find a single fitness log with an id\nexports.findOne = (req, res) => {\n  const id = req.query.id;\n  console.log(\"id is : \" + id);\n  user.findOne(id)\n    .then(data => {\n      res.send(data);\n    })\n    .catch(err => {\n      res.status(500).send({\n        message: \"Error retrieving Fitness with id=\" + id\n      });\n    });\n};\n\n\n\n};"]},"metadata":{},"sourceType":"script"}